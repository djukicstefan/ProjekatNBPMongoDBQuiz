@model Quiz

@{
    ViewData["Title"] = Model.Title;
    int i = 0, j = 0;
    int questionCount = Model.Questions.Count;
    int[] answersCount = new int[questionCount];

    for (int p = 0; p < questionCount; ++p)
        answersCount[p] = Model.Questions[p].Answers.Count;
}

<div class="container">
    <div class="row d-flex justify-content-center my-4">
        <h1 class="text-light">@Model.Title</h1>
    </div>

    <div class="row d-flex justify-content-center">
        <div class="col-12 col-sm-8" id="questions">
            @foreach (var question in Model.Questions)
            {
                j = 0;
                <div class="card question-card mb-2">
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2 text-muted">@(i + 1)</h6>
                        <h5 class="card-title">@question.Text</h5>
                    </div>

                    <ul class="list-group list-group-flush" id="question_@i">
                        @foreach (var answer in question.Answers)
                        {
                            <li class="list-group-item">
                                <div class="form-check">
                                    <input name="aCheckbox_@(i)_@(j)" class="form-check-input mt-2" type="checkbox" id="checkbox_@(i)_@(j)">
                                    <p name="aContent_@(i)_@(j)" class="card-text">@answer.Text</p>
                                </div>
                            </li>
                            j++;
                        }
                    </ul>
                </div>
                i++;
            }
        </div>
    </div>

    <div class="row d-flex justify-content-center mx-4 my-5">
        <div class="col-12 col-sm-8">
            <button id="btn-submit-quiz" class="btn w-100 btn-success" onclick="SubmitQuiz()">Završi kviz</button>
        </div>
    </div>
</div>

<script>
    questionInputs = []
    answers = {}

    const startTime = new Date().getTime()

    function GetAnswers()
    {
        var anss = @Html.Raw(Json.Serialize(answersCount));
        console.log(anss)

        for (i = 0; i < @questionCount; ++i) {
            for (j = 0; j < anss[i]; ++j) {
                parent = document.getElementById(`question_${i}`);
                if (!answers[i])
                    answers[i] = []

                answers[i].push({
                    check_box: parent.querySelector(`input[name=aCheckbox_${i}_${j}]`),
                })
            }
        }
    }

    function GetQuestions()
    {
        parent = document.getElementById('questions');
        for (i = 0; i <@(Model.Questions.Count); ++i) {
            questionInputs.push('')
        }
    }

    function createElementFromHTML(htmlString) {
        var div = document.createElement('div');
        div.innerHTML = htmlString.trim();

        return div.firstChild;
    }

    function GetQuizJSON()
    {
        GetQuestions()
        GetAnswers()

        questionIndex = 0
        Quiz = {
            Questions: questionInputs.map((x, index) => ({
                Answers: answers[index].map( y => ({
                    Correct: y.check_box.checked
                }))
            }))
        }
        Quiz.Id = "@(Model.Id)"
        Quiz.UserId = "@(Model.UserId)"
        Quiz.Title = `${new Date().getTime() - startTime}`

        return JSON.stringify(Quiz)
    }

    function SubmitQuiz()
    {
        $.ajax({
            type: "POST",
            headers: { "Content-Type": "application/json" },
            url: '@Url.Action("SubmitQuiz", "Quiz")',
            data: GetQuizJSON(),
            success: () => {
                window.location = "@Url.Action("QuizPreview", "Quiz", new { quizId = Model.Id })";
            },
            error: (e) => {
                alert("Something went wrong " + e);
                console.error(e);
            }
        });
    }
</script>
